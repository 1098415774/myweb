<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"

>
    <!--切面编程自动代理-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--包扫描-->
    <context:component-scan base-package="top.zhkumanage"/>
    <!--注解生成Bean-->
    <context:annotation-config/>
    <!--引用数据库连接-->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:top/zhkumanage/**/**.xml"/>
    </bean>

    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="top.zhkumanage.*.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close" init-method="init" >
        <!-- 数据库基本信息配置 -->
        <property name = "url" value = "${jdbc_url}" />
        <property name = "username" value = "${jdbc_username}" />
        <property name = "password" value = "${jdbc_password}" />
        <property name = "driverClassName" value = "${jdbc_driverClassName}" />

        <!-- 监控数据库 -->
        <property name="filters" value="mergeStat"/>

        <!-- 最大并发连接数 -->
        <property name = "maxActive" value = "${maxActive}" />

        <!-- 初始化连接数量 -->
        <property name = "initialSize" value = "${initialSize}" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name = "maxWait" value = "${maxWait}" />

        <!-- 最小空闲连接数 -->
        <property name = "minIdle" value = "${minIdle}" />

        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name = "timeBetweenEvictionRunsMillis" value ="${timeBetweenEvictionRunsMillis}" />-->

        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name = "minEvictableIdleTimeMillis" value ="${minEvictableIdleTimeMillis}" />-->

        <property name = "validationQuery" value = "${validationQuery}" />
        <property name = "testWhileIdle" value = "${testWhileIdle}" />
        <property name = "testOnBorrow" value = "${testOnBorrow}" />
        <property name = "testOnReturn" value = "${testOnReturn}" />

        <!-- 打开 removeAbandoned 功能 -->
        <property name = "removeAbandoned" value = "${removeAbandoned}" />

        <!-- 1800 秒，也就是 30 分钟 -->
        <property name = "removeAbandonedTimeout" value ="${removeAbandonedTimeout}" />

        <!-- 关闭 abanded 连接时输出错误日志 -->
        <property name = "logAbandoned" value = "${logAbandoned}" />
    </bean >

    <!--<import resource="spring-job.xml"/>-->
    <!--<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">-->
    <!--&lt;!&ndash;数据源 这里设为和系统同一个&ndash;&gt;-->
    <!--<property name="dataSource" ref="dataSource"/>-->
    <!--&lt;!&ndash;事务管理&ndash;&gt;-->
    <!--<property name="transactionManager" ref="transactionManager"/>-->
    <!--&lt;!&ndash;更新数据库表 如果没有则创建&ndash;&gt;-->
    <!--<property name="databaseSchemaUpdate" value="true"/>-->
    <!--&lt;!&ndash;是否启动jobExecutor&ndash;&gt;-->
    <!--<property name="jobExecutorActivate" value="false"/>-->
    <!--<property name="activityFontName" value="宋体"/>-->
    <!--<property name="labelFontName" value="宋体"/>-->

    <!--<property name="deploymentResources">-->
    <!--<list>-->
    <!--<value>classpath*:workflow/*.bpmn</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <!--<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">-->
    <!--<property name="processEngineConfiguration" ref="processEngineConfiguration"/>-->
    <!--</bean>-->

    <!--<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />-->
    <!--<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />-->
    <!--<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />-->
    <!--<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />-->
    <!--<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />-->

    <bean id="contextUtil" class="top.additional.ContextUtil"></bean>
    <bean id="equipMSGMap" class="top.zhkumanage.equip.entity.EquipMSGMap"></bean>
    <bean id="socketList" class="top.additional.Socket.SocketList"></bean>
    <bean id="socketWThreadManage" class="top.additional.Socket.SocketWThreadManage"></bean>
</beans>